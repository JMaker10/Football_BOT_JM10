from typing import Any, Dict
from aiogram import F, Router
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from config import ADMINS as ADMINS

import app.keyboards as kb
import app.database.requests as rq

router = Router()

class Reg(StatesGroup):
    serch_tg_id = State()


#–ü–û–ò–°–ö –ø–æ TG id
@router.message(F.text == '–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ TG ID üîç', F.from_user.id.in_(ADMINS))
async def user_serch_tg(message: Message, state: FSMContext):
    await state.set_state(Reg.serch_tg_id)
    await message.delete()
    bot_message = await message.answer("–í–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ TG ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üîç:", reply_markup=ReplyKeyboardRemove())
    await state.update_data(prev_bot_message=bot_message.message_id)

@router.message(Reg.serch_tg_id)
async def user_serch_tg_get_id(message: Message, state: FSMContext):
    await message.delete()
    data = await state.get_data()
    if 'prev_bot_message' in data:
        try:
            await message.bot.delete_message(chat_id=message.chat.id, message_id=data['prev_bot_message'])
        except Exception:
            pass  # –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∂–µ –≤–∏–¥–∞–ª–µ–Ω–µ –∞–±–æ –Ω–µ —ñ—Å–Ω—É—î    
    try:
        tg_id = int(message.text)
    except:
        tg_id = 0
    user = await rq.user(tg_id)
    if user:
        await message.answer(f"üë§ –í–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π ID: {user.tg_id}\nüë§ –¢–µ–ª–µ–≥—Ä–∞–º ID: {user.tg_id}\n\n–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª—É–±–∞: {user.username}\n–ö—Ä—É—Ç–∫–∏ (–°–≤–æ–±–æ–¥–Ω—ã–µ –∞–≥–µ–Ω—Ç—ãüë§): {user.spins} üîÅ\n–î–µ–Ω–∏–≥–∏ (—Ñ–∏–Ω–∞–Ω—Å—ã): {user.cash} üíµ\n\nüïì –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∫—Ä—É—Ç–∫–∏: {user.next_spin.strftime('%d.%m.%Y - %H:%M')}", reply_markup=kb.admin_menu)
        await state.clear()
    else:
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", reply_markup=kb.admin_menu)
        await state.clear()
